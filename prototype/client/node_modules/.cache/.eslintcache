[{"/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/index.js":"1","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/reportWebVitals.js":"2","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/App.js":"3","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Navbar.js":"4","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Profile.js":"5","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Login.js":"6","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/SearchConcert.js":"7","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Landing.js":"8","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Playlists.js":"9"},{"size":500,"mtime":1639451073799,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1639451073805,"results":"12","hashOfConfig":"11"},{"size":320,"mtime":1639451073798,"results":"13","hashOfConfig":"11"},{"size":3701,"mtime":1639524788291,"results":"14","hashOfConfig":"11"},{"size":1334,"mtime":1639528484966,"results":"15","hashOfConfig":"11"},{"size":675,"mtime":1639451073798,"results":"16","hashOfConfig":"11"},{"size":1318,"mtime":1639451073799,"results":"17","hashOfConfig":"11"},{"size":395,"mtime":1639525120744,"results":"18","hashOfConfig":"11"},{"size":3652,"mtime":1639451073798,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"hwdkj2",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/index.js",[],["43","44"],"/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/reportWebVitals.js",[],"/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/App.js",[],"/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Navbar.js",["45","46","47","48","49","50"],"import React, { useState } from \"react\";\nimport {\n    AppBar,\n    Box,\n    Toolbar,\n    Typography,\n    Button,\n    IconButton,\n    Grid\n} from \"@material-ui/core\";\nimport {LibraryMusic} from '@material-ui/icons';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport LoginIcon from '@mui/icons-material/Login';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport SearchConcert from \"./SearchConcert\";\nimport { Profile } from \"./Profile\";\nimport Login from \"./Login\";\nimport Landing from \"./Landing\";\n\nconst Navbar = () => {\n    const [currentPage, setCurrentPage] = React.useState(\"landing\");\n    const [auth, setAuth] = React.useState(false);\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\" style={{background: \"linear-gradient(45deg, #fe6b8b 30%, #ff8e53 90%)\"}}>\n            <Toolbar>\n                {!auth && (\n                    <IconButton\n                        size=\"large\"\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={() => setCurrentPage(\"home\")}\n                        color=\"inherit\"\n                    >\n                        <LibraryMusic />\n                    </IconButton>\n                )}\n                {auth && (\n                    <IconButton\n                        size=\"large\"\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={() => setCurrentPage(\"profile\")}\n                        color=\"inherit\"\n                    >\n                        <AccountCircleIcon />\n                    </IconButton>\n                )}\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }} onClick={() => setCurrentPage(\"home\")}>\n                    CS411 Music World!\n                </Typography>\n                {!auth && (\n                    <IconButton\n                        size=\"large\"\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={() => {\n                            setCurrentPage(\"home\");\n                            setAuth(true) // needs change\n                        }}\n                        color=\"inherit\"\n                    >\n                        <LoginIcon />\n                        <div style={{fontSize: 18, fontWeight: 600}}>Login</div>\n                    </IconButton>\n                )}\n                {auth && (\n                    <IconButton\n                        size=\"large\"\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={() => {setCurrentPage(\"home\"); setAuth(false)}}\n                        color=\"inherit\"\n                    >\n                        <LogoutIcon />\n                        <div style={{fontSize: 18, fontWeight: 600}}>Logout</div>\n                    </IconButton>\n                )}\n            </Toolbar>\n          </AppBar>\n          {currentPage == \"landing\" ?\n            <Landing /> : <Grid></Grid>\n          }\n          {currentPage == \"home\" && auth ?\n            <SearchConcert /> : <Grid></Grid>\n          }\n          {currentPage == \"home\" && !auth ?\n            <Login /> : <Grid></Grid>\n          }\n          {currentPage == \"profile\" ?\n            <Profile /> : <Grid></Grid>\n          }\n        </Box>\n      );\n};\nexport default Navbar;","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Profile.js",[],"/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Login.js",[],"/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/SearchConcert.js",["51","52","53"],"import React, { useState } from \"react\";\nimport TextField from '@mui/material/TextField';\nimport DatePicker from '@mui/lab/DatePicker';\nimport {Grid, Button} from '@material-ui/core';\nimport Playlists from './Playlists'\n\nfunction SearchConcert() {\n    const [artistName, setArtistName] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [date, setDate] = useState(null);\n\n  return (\n    <div>\n        <Grid container direction=\"row\" spacing={1} justifyContent=\"center\" alignItems=\"center\" style={{marginTop:100}}>\n            <TextField id=\"outlined-basic\" label=\"Artist Name\" variant=\"outlined\" onChange={(event) => setArtistName(event.target.value.toLowerCase())} />\n            <TextField id=\"outlined-basic\" label=\"City\" variant=\"outlined\" onChange={(event) => setCity(event.target.value)}/>\n            <DatePicker\n                label=\"Concert Date\"\n                value={date}\n                onChange={(newDate) => {\n                    setDate(newDate);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n            />\n        </Grid>\n        <h2 align=\"center\">Tracks</h2>\n        {artistName != \"\" ?\n            <Grid ><Playlists artistName={artistName} /></Grid>\n            : <Grid></Grid>\n        }\n    </div>\n  );\n}\n\nexport default SearchConcert;\n","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Landing.js",["54"],"import React from \"react\";\nimport {Grid} from '@material-ui/core';\nimport landingImg from '../public/assets/landing.jpg';\n\nfunction Landing() {\n  return (\n    <div>\n        <Grid container direction=\"column\" spacing={1} justifyContent=\"center\" alignItems=\"center\" style={{marginTop:100}}>\n            <img src={landingImg} width=\"70%\"/>\n        </Grid>\n    </div>\n  );\n}\n\nexport default Landing;","/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Playlists.js",["55","56","57"],"import React, { useState, useEffect } from \"react\";\nimport {Grid, Typography, Box, List, ListItem, ListItemText, ListItemAvatar, Avatar} from '@material-ui/core';\n\nfunction Playlists({artistName}) {\n    const [spotifyPlaylists, setSpotifyPlaylists] = useState([]);\n    const [itunesPlaylists, setItunesPlaylists] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n\n            // fetch Spotify tracks\n            // const response = await fetch(`/api/playlists/${artistName}`)\n            // const data = await response.json()\n            // var tempData = data.body.tracks.items\n            // var tempPlaylists = []\n            // for (var i = 0; i < tempData.length; i++) {\n            //     const artists = tempData[i]?.album?.artists\n            //     for (var j = 0; j < artists.length; j++) {\n            //         const currArtistName = artists[j]?.name.toLowerCase()\n            //         if (currArtistName.includes(artistName)) {\n            //             tempPlaylists.push(tempData[i])\n            //             break;\n            //         }\n            //     }\n            // }\n            // console.log(tempPlaylists)\n            // setSpotifyPlaylists(tempPlaylists)\n\n            // fetch iTunes tracks\n            fetch(`https://itunes.apple.com/search?term=${artistName}`)\n                .then( async res => {\n                    try {\n                        const data = await res.json()\n                        setItunesPlaylists(data.results)\n                        console.log('response data?', data.results)\n                    } catch(error) {\n                        console.error(error)\n                    }\n                }).catch(e => console.log(e));\n        }\n        fetchData()\n    }, [artistName])\n\n    return (\n        <div>\n            <Grid container spacing={2}>\n                <Grid item xs={6}>\n                    <h2 align=\"center\">Spotify</h2>\n                    <List dense={true}>\n                        {spotifyPlaylists.map((playlist) => {\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"Remy Sharp\" src={playlist?.album?.images[0]?.url} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={playlist?.album?.name}\n                                        secondary={playlist?.album?.artists[0]?.name}\n                                    />\n                                </ListItem>)\n                            })\n                        }\n                    </List>\n                </Grid>\n                <Grid item xs={4}>\n                    <h2 align=\"center\">iTunes</h2>\n                    <List dense={true}>\n                        {itunesPlaylists.map((playlist) => {\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"Remy Sharp\" src={playlist?.artworkUrl100} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={playlist?.trackName}\n                                        secondary={playlist?.artistName}\n                                    />\n                                </ListItem>)\n                            })\n                        }\n                    </List>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Playlists;\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":7,"column":5,"nodeType":"64","messageId":"65","endLine":7,"endColumn":11},{"ruleId":"67","severity":1,"message":"68","line":86,"column":24,"nodeType":"69","messageId":"70","endLine":86,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":89,"column":24,"nodeType":"69","messageId":"70","endLine":89,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":92,"column":24,"nodeType":"69","messageId":"70","endLine":92,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":95,"column":24,"nodeType":"69","messageId":"70","endLine":95,"endColumn":26},{"ruleId":"62","severity":1,"message":"66","line":4,"column":15,"nodeType":"64","messageId":"65","endLine":4,"endColumn":21},{"ruleId":"62","severity":1,"message":"71","line":9,"column":12,"nodeType":"64","messageId":"65","endLine":9,"endColumn":16},{"ruleId":"67","severity":1,"message":"72","line":27,"column":21,"nodeType":"69","messageId":"70","endLine":27,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":9,"column":13,"nodeType":"75","endLine":9,"endColumn":48},{"ruleId":"62","severity":1,"message":"76","line":2,"column":15,"nodeType":"64","messageId":"65","endLine":2,"endColumn":25},{"ruleId":"62","severity":1,"message":"77","line":2,"column":27,"nodeType":"64","messageId":"65","endLine":2,"endColumn":30},{"ruleId":"62","severity":1,"message":"78","line":5,"column":30,"nodeType":"64","messageId":"65","endLine":5,"endColumn":49},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'city' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","'Box' is defined but never used.","'setSpotifyPlaylists' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]