{"ast":null,"code":"var _jsxFileName = \"/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'name',\n  headerName: 'Name',\n  type: \"string\",\n  width: 130\n}, {\n  field: 'gender',\n  headerName: 'Gender',\n  type: 'string',\n  width: 90\n}, {\n  field: 'email',\n  headerName: 'Email',\n  type: \"string\",\n  width: 160\n}, {\n  field: \"createdOn\",\n  headerName: \"Became a member since\",\n  type: \"date\",\n  width: 150\n}];\nexport const Profile = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/users\");\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        console.log(\"Failed to retrieve users data: \", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  console.log(\"DEBUG USERS: \", users);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: users,\n      columns: columns,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/emilydeng/Desktop/411/411-Project/prototype/client/src/components/Profile.js"],"names":["React","useState","useEffect","DataGrid","columns","field","headerName","type","width","Profile","users","setUsers","fetchData","response","fetch","data","json","error","console","log","height"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE,MAA7B;AAAqCC,EAAAA,IAAI,EAAE,QAA3C;AAAqDC,EAAAA,KAAK,EAAE;AAA5D,CADc,EAEd;AACEH,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,UAAU,EAAE,QAFd;AAGEC,EAAAA,IAAI,EAAE,QAHR;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAFc,EAQd;AACEH,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,UAAU,EAAE,OAFd;AAGEC,EAAAA,IAAI,EAAE,QAHR;AAIEC,EAAAA,KAAK,EAAE;AAJT,CARc,EAcd;AACEH,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,UAAU,EAAE,uBAFd;AAGEC,EAAAA,IAAI,EAAE,MAHR;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAdc,CAAhB;AAsBA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAD,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,QAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,OAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACD;AACF,KARD;;AAUAL,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;AAcAM,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,KAA7B;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAE,GAAV;AAAeZ,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEE,KADR;AAEE,MAAA,OAAO,EAAEN,OAFX;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAIE,MAAA,kBAAkB,EAAE,CAAC,CAAD,CAJtB;AAKE,MAAA,iBAAiB;AALnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9BM;;GAAMK,O;;KAAAA,O","sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\n\nconst columns = [\n  { field: 'name', headerName: 'Name', type: \"string\", width: 130 },\n  {\n    field: 'gender',\n    headerName: 'Gender',\n    type: 'string',\n    width: 90,\n  },\n  {\n    field: 'email',\n    headerName: 'Email',\n    type: \"string\",\n    width: 160,\n  },\n  {\n    field: \"createdOn\",\n    headerName: \"Became a member since\",\n    type: \"date\",\n    width: 150\n  }\n];\n\nexport const Profile = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/users\");\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        console.log(\"Failed to retrieve users data: \", error);\n      }\n    };\n  \n    fetchData();\n  }, []);\n\n  console.log(\"DEBUG USERS: \", users);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        rows={users}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}